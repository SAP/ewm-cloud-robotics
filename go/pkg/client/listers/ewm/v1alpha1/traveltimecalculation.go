// Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
//
// This file is part of ewm-cloud-robotics
// (see https://github.com/SAP/ewm-cloud-robotics).
//
// This file is licensed under the Apache Software License, v. 2 except as noted
// otherwise in the LICENSE file (https://github.com/SAP/ewm-cloud-robotics/blob/main/LICENSE)
//

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/SAP/ewm-cloud-robotics/go/pkg/apis/ewm/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TravelTimeCalculationLister helps list TravelTimeCalculations.
// All objects returned here must be treated as read-only.
type TravelTimeCalculationLister interface {
	// List lists all TravelTimeCalculations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.TravelTimeCalculation, err error)
	// TravelTimeCalculations returns an object that can list and get TravelTimeCalculations.
	TravelTimeCalculations(namespace string) TravelTimeCalculationNamespaceLister
	TravelTimeCalculationListerExpansion
}

// travelTimeCalculationLister implements the TravelTimeCalculationLister interface.
type travelTimeCalculationLister struct {
	indexer cache.Indexer
}

// NewTravelTimeCalculationLister returns a new TravelTimeCalculationLister.
func NewTravelTimeCalculationLister(indexer cache.Indexer) TravelTimeCalculationLister {
	return &travelTimeCalculationLister{indexer: indexer}
}

// List lists all TravelTimeCalculations in the indexer.
func (s *travelTimeCalculationLister) List(selector labels.Selector) (ret []*v1alpha1.TravelTimeCalculation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TravelTimeCalculation))
	})
	return ret, err
}

// TravelTimeCalculations returns an object that can list and get TravelTimeCalculations.
func (s *travelTimeCalculationLister) TravelTimeCalculations(namespace string) TravelTimeCalculationNamespaceLister {
	return travelTimeCalculationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TravelTimeCalculationNamespaceLister helps list and get TravelTimeCalculations.
// All objects returned here must be treated as read-only.
type TravelTimeCalculationNamespaceLister interface {
	// List lists all TravelTimeCalculations in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.TravelTimeCalculation, err error)
	// Get retrieves the TravelTimeCalculation from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.TravelTimeCalculation, error)
	TravelTimeCalculationNamespaceListerExpansion
}

// travelTimeCalculationNamespaceLister implements the TravelTimeCalculationNamespaceLister
// interface.
type travelTimeCalculationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TravelTimeCalculations in the indexer for a given namespace.
func (s travelTimeCalculationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.TravelTimeCalculation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TravelTimeCalculation))
	})
	return ret, err
}

// Get retrieves the TravelTimeCalculation from the indexer for a given namespace and name.
func (s travelTimeCalculationNamespaceLister) Get(name string) (*v1alpha1.TravelTimeCalculation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("traveltimecalculation"), name)
	}
	return obj.(*v1alpha1.TravelTimeCalculation), nil
}
