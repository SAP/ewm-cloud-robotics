// Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
//
// This file is part of ewm-cloud-robotics
// (see https://github.com/SAP/ewm-cloud-robotics).
//
// This file is licensed under the Apache Software License, v. 2 except as noted
// otherwise in the LICENSE file (https://github.com/SAP/ewm-cloud-robotics/blob/master/LICENSE)
//

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/SAP/ewm-cloud-robotics/go/pkg/apis/ewm/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AuctioneerLister helps list Auctioneers.
type AuctioneerLister interface {
	// List lists all Auctioneers in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Auctioneer, err error)
	// Auctioneers returns an object that can list and get Auctioneers.
	Auctioneers(namespace string) AuctioneerNamespaceLister
	AuctioneerListerExpansion
}

// auctioneerLister implements the AuctioneerLister interface.
type auctioneerLister struct {
	indexer cache.Indexer
}

// NewAuctioneerLister returns a new AuctioneerLister.
func NewAuctioneerLister(indexer cache.Indexer) AuctioneerLister {
	return &auctioneerLister{indexer: indexer}
}

// List lists all Auctioneers in the indexer.
func (s *auctioneerLister) List(selector labels.Selector) (ret []*v1alpha1.Auctioneer, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Auctioneer))
	})
	return ret, err
}

// Auctioneers returns an object that can list and get Auctioneers.
func (s *auctioneerLister) Auctioneers(namespace string) AuctioneerNamespaceLister {
	return auctioneerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AuctioneerNamespaceLister helps list and get Auctioneers.
type AuctioneerNamespaceLister interface {
	// List lists all Auctioneers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Auctioneer, err error)
	// Get retrieves the Auctioneer from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Auctioneer, error)
	AuctioneerNamespaceListerExpansion
}

// auctioneerNamespaceLister implements the AuctioneerNamespaceLister
// interface.
type auctioneerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Auctioneers in the indexer for a given namespace.
func (s auctioneerNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Auctioneer, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Auctioneer))
	})
	return ret, err
}

// Get retrieves the Auctioneer from the indexer for a given namespace and name.
func (s auctioneerNamespaceLister) Get(name string) (*v1alpha1.Auctioneer, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("auctioneer"), name)
	}
	return obj.(*v1alpha1.Auctioneer), nil
}
