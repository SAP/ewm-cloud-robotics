// Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
//
// This file is part of ewm-cloud-robotics
// (see https://github.com/SAP/ewm-cloud-robotics).
//
// This file is licensed under the Apache Software License, v. 2 except as noted
// otherwise in the LICENSE file (https://github.com/SAP/ewm-cloud-robotics/blob/main/LICENSE)
//

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/SAP/ewm-cloud-robotics/go/pkg/apis/ewm/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// OrderAuctionLister helps list OrderAuctions.
// All objects returned here must be treated as read-only.
type OrderAuctionLister interface {
	// List lists all OrderAuctions in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.OrderAuction, err error)
	// OrderAuctions returns an object that can list and get OrderAuctions.
	OrderAuctions(namespace string) OrderAuctionNamespaceLister
	OrderAuctionListerExpansion
}

// orderAuctionLister implements the OrderAuctionLister interface.
type orderAuctionLister struct {
	indexer cache.Indexer
}

// NewOrderAuctionLister returns a new OrderAuctionLister.
func NewOrderAuctionLister(indexer cache.Indexer) OrderAuctionLister {
	return &orderAuctionLister{indexer: indexer}
}

// List lists all OrderAuctions in the indexer.
func (s *orderAuctionLister) List(selector labels.Selector) (ret []*v1alpha1.OrderAuction, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OrderAuction))
	})
	return ret, err
}

// OrderAuctions returns an object that can list and get OrderAuctions.
func (s *orderAuctionLister) OrderAuctions(namespace string) OrderAuctionNamespaceLister {
	return orderAuctionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// OrderAuctionNamespaceLister helps list and get OrderAuctions.
// All objects returned here must be treated as read-only.
type OrderAuctionNamespaceLister interface {
	// List lists all OrderAuctions in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.OrderAuction, err error)
	// Get retrieves the OrderAuction from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.OrderAuction, error)
	OrderAuctionNamespaceListerExpansion
}

// orderAuctionNamespaceLister implements the OrderAuctionNamespaceLister
// interface.
type orderAuctionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all OrderAuctions in the indexer for a given namespace.
func (s orderAuctionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.OrderAuction, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OrderAuction))
	})
	return ret, err
}

// Get retrieves the OrderAuction from the indexer for a given namespace and name.
func (s orderAuctionNamespaceLister) Get(name string) (*v1alpha1.OrderAuction, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("orderauction"), name)
	}
	return obj.(*v1alpha1.OrderAuction), nil
}
