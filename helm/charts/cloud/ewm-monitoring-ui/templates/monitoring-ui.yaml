apiVersion: v1
kind: ServiceAccount
metadata:
  name: monitoring-ui
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sap-ewm:monitoring-ui{{ if .Values.tenant }}:{{ .Values.tenant }}{{ end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sap-ewm:monitoring-ui
subjects:
- namespace: {{ .Release.Namespace }}
  kind: ServiceAccount
  name: monitoring-ui
---
apiVersion: v1
kind: Secret
metadata:
  name: ewm-odata-api
type: Opaque
## Usage of 'stringData' field rather than 'data' to leverage automatic base64 en-/decoding 
## (ref. https://kubernetes.io/docs/concepts/configuration/secret/#creating-a-secret-manually)
stringData:
  ewmhost: "{{ .Values.envs.ewmhost }}"
  ewmauth: "{{ .Values.envs.ewmauth }}"
  ewmuser: "{{ .Values.envs.ewmuser }}"
  ewmpswd: "{{ .Values.envs.ewmpassword }}"
  ewmpath: "{{ .Values.envs.ewmbasepath }}"
  ewmnewpath: "{{ .Values.envs.ewmnewpath }}"
  ewmclid: "{{ .Values.envs.ewmclientid }}"
  ewmclse: "{{ .Values.envs.ewmclientsecret }}"
  ewmtkep: "{{ .Values.envs.ewmtokenendpoint }}"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ewm-monitoring-ui-nginx
data:
  openui5app.conf: |-
    server {
       listen      80;
       server_name  _;
       location / {
           root /app;
       }
       location /robots/ {
           proxy_pass http://localhost:8001/apis/registry.cloudrobotics.com/v1alpha1/namespaces/{{ .Values.tenant_main_namespace }}/robots/;
           proxy_set_header Accept-Encoding "";
           sub_filter_once off;
           sub_filter_types *;
           sub_filter '/apis/registry.cloudrobotics.com/v1alpha1/namespaces/{{ .Values.tenant_main_namespace }}' '{{ $.Values.urlpath }}';
       }
       location /warehouseorders/ {
           proxy_pass http://localhost:8002/apis/ewm.sap.com/v1alpha1/namespaces/{{ .Values.tenant_main_namespace }}/warehouseorders/;
           proxy_set_header Accept-Encoding "";
           sub_filter_once off;
           sub_filter_types *;
           sub_filter '/apis/ewm.sap.com/v1alpha1/namespaces/{{ .Values.tenant_main_namespace }}' '{{ $.Values.urlpath }}';
       }
       location /robotconfigurations/ {
           proxy_pass http://localhost:8003/apis/ewm.sap.com/v1alpha1/namespaces/{{ .Values.tenant_main_namespace }}/robotconfigurations/;
           proxy_set_header Accept-Encoding "";
           sub_filter_once off;
           sub_filter_types *;
           sub_filter '/apis/ewm.sap.com/v1alpha1/namespaces/{{ .Values.tenant_main_namespace }}' '{{ $.Values.urlpath }}';
       }
       include /odata/location.conf;
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitoring-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monitoring-ui
  template:
    metadata:
      labels:
        app: monitoring-ui
    spec:
      serviceAccountName: monitoring-ui
      volumes:
      - name: nginx-configmap-volume
        configMap:
          name: ewm-monitoring-ui-nginx
      containers:
      - name: kubectl-proxy-robots
        image: bitnami/kubectl:latest
        args: ["proxy", "--port=8001", "--accept-paths=^/apis/registry.cloudrobotics.com/v1alpha1/namespaces/{{ .Values.tenant_main_namespace }}/robots/*", "--reject-methods='DELETE,POST,PUT,PATCH'", "--keepalive=10s"]
        resources:
          requests:
            memory: "16Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "250m"
      - name: kubectl-proxy-warehouseorders
        image: bitnami/kubectl:latest
        args: ["proxy", "--port=8002", "--accept-paths=^/apis/ewm.sap.com/v1alpha1/namespaces/{{ .Values.tenant_main_namespace }}/warehouseorders/*", "--reject-methods='DELETE,POST,PUT,PATCH'", "--keepalive=10s"]
        resources:
          requests:
            memory: "16Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "250m"
      - name: kubectl-proxy-robotconfigurations
        image: bitnami/kubectl:latest
        args: ["proxy", "--port=8003", "--accept-paths=^/apis/ewm.sap.com/v1alpha1/namespaces/{{ .Values.tenant_main_namespace }}/robotconfigurations/*", "--reject-methods='DELETE,POST'", "--keepalive=10s"]
        resources:
          requests:
            memory: "16Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "250m"
      - name: nginx-openui5
        image: {{ .Values.image }}
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: nginx-configmap-volume
        env:
        - name: CLOUD_ROBOTICS_DOMAIN
          value: {{ .Values.tenant_domain }}
        - name: ODATA_USER
          valueFrom:
            secretKeyRef:
              name: ewm-odata-api
              key: ewmuser
        - name: ODATA_HOST
          valueFrom:
            secretKeyRef:
              name: ewm-odata-api
              key: ewmhost
        - name: ODATA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ewm-odata-api
              key: ewmpswd
        - name: ODATA_AUTH
          valueFrom:
            secretKeyRef:
              name: ewm-odata-api
              key: ewmauth
        - name: ODATA_BASEPATH
          valueFrom:
            secretKeyRef:
              name: ewm-odata-api
              key: ewmpath
        - name: ODATA_NEWPATH
          valueFrom:
            secretKeyRef:
              name: ewm-odata-api
              key: ewmnewpath
        - name: ODATA_CLIENTID
          valueFrom:
            secretKeyRef:
              name: ewm-odata-api
              key: ewmclid
        - name: ODATA_CLIENTSECRET
          valueFrom:
            secretKeyRef:
              name: ewm-odata-api
              key: ewmclse
        - name: ODATA_TOKENENDPOINT
          valueFrom:
            secretKeyRef:
              name: ewm-odata-api
              key: ewmtkep
        - name: LOG_LEVEL
          value: {{ .Values.envs.log.level }}
        - name: LOG_FORMAT
          value: {{ .Values.envs.log.format }}
        resources:
          requests:
            memory: "16Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "250m"
---
apiVersion: v1
kind: Service
metadata:
  name: monitoring-ui
  labels:
    app: monitoring-ui
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
  selector:
    app: monitoring-ui
