apiVersion: v1
kind: ServiceAccount
metadata:
  name: dummy-mission-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dummy-mission-controller{{ if .Values.tenant }}:{{ .Values.tenant }}{{ end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cloud-robotics:mission-controller
subjects:
- namespace: {{ .Release.Namespace }}
  kind: ServiceAccount
  name: dummy-mission-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sap-ewm:order-manager:read-crds{{ if .Values.tenant }}:{{ .Values.tenant }}{{ end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sap-ewm:read-crds
subjects:
- namespace: {{ .Release.Namespace }}
  kind: ServiceAccount
  name: dummy-mission-controller
---
{{- range $.Values.robots }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dummy-mission-controller-{{ .name }}
spec:
  replicas: 1
  serviceName: dummy-mission-controller-{{ .name }}
  selector:
    matchLabels:
      app: dummy-mission-controller-{{ .name }}
  template:
    metadata:
      labels:
        app: dummy-mission-controller-{{ .name }}
    spec:
      serviceAccountName: dummy-mission-controller
      containers:
      - name: dummy-mission-controller-{{ .name }}
        image: {{ $.Values.image }}
        env:
        - name: ROBCO_ROBOT_NAME
          value: "{{ .name }}"
        - name: K8S_NAMESPACE
          value: {{ $.Values.tenant_main_namespace }}
        - name: LOG_LEVEL
          value: {{ $.Values.envs.log.level }}
        - name: LOG_FORMAT
          value: {{ $.Values.envs.log.format }}
        resources:
          requests:
            memory: "64Mi"
            cpu: "10m"
          limits:
            memory: "256Mi"
            cpu: "250m"
---
{{- end }}