apiVersion: v1
kind: ServiceAccount
metadata:
  name: robot-configurator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sap-ewm:robot-configurator{{ if .Values.tenant }}:{{ .Values.tenant }}{{ end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sap-ewm:robot-configurator
subjects:
- namespace: {{ .Release.Namespace }}
  kind: ServiceAccount
  name: robot-configurator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sap-ewm:robot-configurator:read-crds{{ if .Values.tenant }}:{{ .Values.tenant }}{{ end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sap-ewm:read-crds
subjects:
- namespace: {{ .Release.Namespace }}
  kind: ServiceAccount
  name: robot-configurator
---
apiVersion: v1
kind: Secret
metadata:
  name: ewm-odata-api
type: Opaque
## Usage of 'stringData' field rather than 'data' to leverage automatic base64 en-/decoding 
## (ref. https://kubernetes.io/docs/concepts/configuration/secret/#creating-a-secret-manually)
stringData:
  ewmhost: "{{ .Values.envs.ewmhost }}"
  ewmauth: "{{ .Values.envs.ewmauth }}"
  ewmuser: "{{ .Values.envs.ewmuser }}"
  ewmpswd: "{{ .Values.envs.ewmpassword }}"
  ewmpath: "{{ .Values.envs.ewmbasepath }}"
  ewmclid: "{{ .Values.envs.ewmclientid }}"
  ewmclse: "{{ .Values.envs.ewmclientsecret }}"
  ewmtkep: "{{ .Values.envs.ewmtokenendpoint }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: robot-configurator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: robot-configurator
  template:
    metadata:
      labels:
        app: robot-configurator
    spec:
      serviceAccountName: robot-configurator
      containers:
      - image: {{ .Values.image }}
        name: robot-configurator
        env:
        - name: EWM_USER
          valueFrom:
            secretKeyRef:
              name: ewm-odata-api
              key: ewmuser
        - name: EWM_HOST
          valueFrom:
            secretKeyRef:
              name: ewm-odata-api
              key: ewmhost
        - name: EWM_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ewm-odata-api
              key: ewmpswd
        - name: EWM_AUTH
          valueFrom:
            secretKeyRef:
              name: ewm-odata-api
              key: ewmauth
        - name: EWM_BASEPATH
          valueFrom:
            secretKeyRef:
              name: ewm-odata-api
              key: ewmpath
        - name: EWM_CLIENTID
          valueFrom:
            secretKeyRef:
              name: ewm-odata-api
              key: ewmclid
        - name: EWM_CLIENTSECRET
          valueFrom:
            secretKeyRef:
              name: ewm-odata-api
              key: ewmclse
        - name: EWM_TOKENENDPOINT
          valueFrom:
            secretKeyRef:
              name: ewm-odata-api
              key: ewmtkep
        - name: EWM_LGNUM
          value: "{{ .Values.envs.ewmlgnum }}"
        - name: EWM_RSRC_TYPE
          value: "{{ .Values.envs.ewmrsrctype }}"
        - name: EWM_RSRC_GRP
          value: "{{ .Values.envs.ewmrsrcgrp }}"
        - name: MAX_IDLE_TIME
          value: "{{ .Values.envs.maxidletime }}"
        - name: CHARGER_LIST
          value: "{{ .Values.envs.chargerlist }}"
        - name: EWM_BATTERY_MIN
          value: "{{ .Values.envs.batterymin }}"
        - name: EWM_BATTERY_OK
          value: "{{ .Values.envs.batteryok }}"
        - name: EWM_BATTERY_IDLE
          value: "{{ .Values.envs.batteryidle }}"
        - name: LOG_LEVEL
          value: {{ .Values.envs.log.level }}
        - name: LOG_FORMAT
          value: {{ .Values.envs.log.format }}
        - name: K8S_NAMESPACE
          value: {{ .Values.tenant_main_namespace }}
        resources:
          requests:
            memory: "64Mi"
            cpu: "10m"
          limits:
            memory: "256Mi"
            cpu: "250m"
